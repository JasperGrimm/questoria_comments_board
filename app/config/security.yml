security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js|api)/
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

#dunglas_angular_csrf:
#      token:
#          id: questoria
#      header:
#           # The name of the HTTP header to check (default to the AngularJS default)
#           name: X-XSRF-TOKEN
#      # Collection of patterns where to set the cookie
#      cookie:
#          name: XSRF-TOKEN
#          set_on:
#              - { path: ^.*, methods: [GET, HEAD] }
#      # Collection of patterns to secure
#      secure:
#        - { path: ^/api, methods: [POST, PUT, PATCH, LINK] }